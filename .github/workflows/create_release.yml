name: Create Release

on:
  push:
    paths:
      - "src/**"
      - "scripts/**"
      - ".github/workflows/**"
      - "xmake.lua"

jobs:
  cancel-old-build:
    name: Cancel previous builds
    runs-on: ubuntu-latest

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

  bundle-windows:
    runs-on: windows-latest
    needs: cancel-old-build
    timeout-minutes: 15
    if: "!contains(toJSON(github.event.commits.*.message), '[SKIP CI]')"
    env:
      VCPKG_VERSION: 2022.03.10

    steps:
      - uses: actions/checkout@v2

      - name: Setup xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: 2.6.4

      - name: Installing vcpkg
        run: |
          git clone -b ${{env.VCPKG_VERSION}} --single-branch https://github.com/Microsoft/vcpkg.git .vcpkg
          cd .vcpkg
          .\bootstrap-vcpkg.bat
          .\vcpkg.exe integrate install
          cd ..

      - name: Cache vcpkg
        uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}\.vcpkg\installed
          key: ${{ runner.os }}-release-${{env.VCPKG_VERSION}}-${{ hashFiles('xmake.lua') }}-x64-v5

      - name: Bundle
        run: |
          xmake bundle -v -y
        env:
          VCPKG_ROOT: ${{ github.workspace }}/.vcpkg

      - name: Upload com.testing-win64
        uses: actions/upload-artifact@v3
        with:
          name: com.testing-win64
          path: build/com.testing-win64.zip

  bundle-linux:
    runs-on: ubuntu-latest
    needs: cancel-old-build
    timeout-minutes: 15
    if: "!contains(toJSON(github.event.commits.*.message), '[SKIP CI]')"
    env:
      VCPKG_VERSION: 2022.03.10

    steps:
      - uses: actions/checkout@v2

      - name: Set up GCC 11
        uses: egor-tensin/setup-gcc@v1
        with:
          version: 11
          platform: x64

      - name: Setup xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: 2.6.4

      - name: Installing vcpkg
        run: |
          git clone -b ${{env.VCPKG_VERSION}} --single-branch https://github.com/Microsoft/vcpkg.git .vcpkg
          cd .vcpkg
          ./bootstrap-vcpkg.sh
          cd ..
      - name: Cache vcpkg
        uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/.vcpkg/installed
          key: ${{ runner.os }}-release-${{env.VCPKG_VERSION}}-${{ hashFiles('xmake.lua') }}-x64-v5

      - name: Bundle
        run: |
          xmake bundle -v -y
        env:
          VCPKG_ROOT: ${{ github.workspace }}/.vcpkg

      - name: Upload com.testing-linux
        uses: actions/upload-artifact@v3
        with:
          name: com.testing-linux
          path: build/com.testing-linux.zip

  bundle-macos:
    runs-on: macos-latest
    needs: cancel-old-build
    timeout-minutes: 15
    if: "!contains(toJSON(github.event.commits.*.message), '[SKIP CI]')"
    env:
      VCPKG_VERSION: 2022.03.10

    steps:
      - uses: actions/checkout@v2

      - name: Setup xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: 2.6.4

      - name: Installing vcpkg
        run: |
          git clone -b ${{env.VCPKG_VERSION}} --single-branch https://github.com/Microsoft/vcpkg.git .vcpkg
          cd .vcpkg
          ./bootstrap-vcpkg.sh
          cd ..

      - name: Cache vcpkg
        uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/.vcpkg/installed
          key: ${{ runner.os }}-release-${{env.VCPKG_VERSION}}-${{ hashFiles('xmake.lua') }}-x64-v5

      - name: Bundle
        run: |
          xmake bundle -v -y
        env:
          VCPKG_ROOT: ${{ github.workspace }}/.vcpkg

      - name: Upload com.testing-macos
        uses: actions/upload-artifact@v3
        with:
          name: com.testing-macos
          path: build/com.testing-macos.zip

  create-release:
    runs-on: ubuntu-latest
    if: "!contains(toJSON(github.event.commits.*.message), '[SKIP CI]')"
    timeout-minutes: 5
    needs: [bundle-linux, bundle-windows, bundle-macos]

    steps:
      - uses: actions/checkout@v2

      - name: Download Linux artifacts
        uses: actions/download-artifact@v1
        with:
          name: com.testing-linux
          path: linux

      - name: Download Windows artifacts
        uses: actions/download-artifact@v1
        with:
          name: com.testing-win64
          path: win64

      - name: Download MacOS artifacts
        uses: actions/download-artifact@v1
        with:
          name: com.testing-macos
          path: macos

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: build-${{github.run_id}}
          generate_release_notes: true
          draft: false
          prerelease: ${{ github.ref_name != 'master' }}
          files: |
            linux/com.testing-linux.zip
            win64/com.testing-win64.zip
            macos/com.testing-macos.zip
